---
name: automation

on:
  workflow_dispatch:

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0
     
      - name: lint
        uses: py-actions/flake8@v2.2.0
        with: 
          path: ./source/
          update-pip: true
          args: --select=E9,F63,F7,F82 --show-source --statistics

  tar:
    needs: python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0

      - name: copy to upload dir
        run: mkdir upload
        run: cp -r source deploy/* upload/
        run: tar -cvf app.tar ./upload

      - name: aws 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: s3 upload
        run: aws s3 cp ./app.tar s3://nasirbucket4342/lendit-cicd-test/

      - name: 배포 생성
        run: |
            aws deploy create-deployment --application-name test \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name test \
            --s3-location bucket=nasirbucket4342,bundleType=tar,key=lendit-cicd-test/app.tar

# https://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/tutorials-github-verify.html
# 아래 명령어를 통해 특정 배포의 결과를 조회 가능
# echo $(aws deploy get-deployment --deployment-id d-PVETBX9SJ --query "deploymentInfo.[status, creator]" --output text)

# https://github.com/marketplace/actions/deployment-status
# steps.deployment.outputs.deployment_id 부분 처럼 앞단계의 deployment_id를 받아올 수 있는지 확인
#       - name: Update deployment status (success)
#         if: success()
#         uses: chrnorm/deployment-status@v2
#         with:
#           token: '${{ github.token }}'
#           environment-url: http://my-app-url.com
#           state: 'success'
#           deployment-id: ${{ steps.deployment.outputs.deployment_id }}

# https://platform.sh/blog/2021/measuring-the-success-of-a-deployment-with-githubactions
# HTTP 요청으로 health_check OK 수신을 기준으로 배포완료 여부 확인?
#   deploy_status:
#     needs: tar
#     runs-on: ubuntu-latest
#     if: tar.steps.

#         steps:
#             - name: 'Application should deploy successfully'
#               uses: lakuapik/gh-actions-http-status@v1
#               with:
#                 sites: '["${{ needs.build.outputs.env_url }}"]'
#                 expected: '[200]'
